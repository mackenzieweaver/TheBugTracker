@using Microsoft.AspNetCore.Identity
@inject SignInManager<BTUser> SignInManager
@inject UserManager<BTUser> UserManager

@{
    BTUser user = null;
    if(SignInManager.IsSignedIn(User))
    {
        user = await UserManager.GetUserAsync(User);
    }
}

<ul class="navbar-nav flex-column">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
                <div class="row">
                    <div class="col-4 p-0 pl-3">
                        <a asp-controller="Users" asp-action="Profile" asp-route-id="@user.Id">
                            <img style="border-radius: 50%; height: 75px;" src="@user.AvatarFileName" alt="" class="">
                        </a>
                    </div>
                    <div class="col p-0">
                        <a asp-controller="Users" asp-action="Profile" asp-route-id="@user.Id" class="nav-link text-dark p-0">
                            <p class="m-0">@user.FullName,</p>
                        </a>
                        <form style="display: inline;" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                            <input value="Logout" type="submit" class="btn text-dark underlinep p-0" style="text-decoration: underline; margin-bottom: 6px;" />
                        </form>
                    </div>
                </div>
            <hr>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
            <hr>
        </li>
    }
</ul>
