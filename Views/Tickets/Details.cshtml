@model TheBugTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity
@using System.IO
@inject UserManager<BTUser> _userManager
@using TheBugTracker.Services.Interfaces
@inject IBTFileService fileService

@{
    ViewData["Title"] = "Details";
    var user = await _userManager.GetUserAsync(User);
}

<h1>@Model.Title</h1>
<a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
<a asp-action="Index">Back to List</a>
<hr>

<div class="row">
    <div class="col">

        <p class="mb-0"><strong>Description</strong></p>
        @Model.Description
        <br>
        <br>

        <h4>Attachments</h4>
        @if(User.Identity.IsAuthenticated)
        {
            <form asp-controller="TicketAttachments" asp-action="Create" method="post" enctype="multipart/form-data">
                <input type="hidden" name="TicketId" value="@Model.Id" />
                <input type="hidden" name="Created" value="@DateTime.Now" />
                <input type="hidden" name="UserId" value="@user.Id" />
                <input type="hidden" name="Description" value="File upload" />

                <input name="FormFile" type="file" class="mb-1" /><br>
                <input type="submit" value="Upload" class="btn btn-primary" />
            </form>
        }
        @foreach (var attachment in Model.Attachments)
        {
            var dir = Directory.GetCurrentDirectory();
            string path = System.IO.Path.Combine(dir, "wwwroot", "attachments", attachment.FileName);
            string extension = System.IO.Path.GetExtension(attachment.FileName);
            string file = $"../../attachments/{attachment.FileName}";
            @if(File.Exists(path))
            {
                @if(attachment.FileName.EndsWith(".json"))
                {                    
                    <a href=@file target="_blank">meta-data.json</a>
                }
                else
                {
                    <a href=@file target="_blank">@attachment.FileName</a>
                }
            }
            else
            {
                <a href=@fileService.ConvertByteArrayToFile(attachment.FileData, extension) target="_blank" download=@attachment.FileName>@attachment.FileName</a>
            }
            <br>
        }

        <br>
        <h4>Comments</h4>
        @if(User.Identity.IsAuthenticated)
        {
            <form asp-controller="TicketComments" asp-action="Create" method="post">
                <input type="hidden" name="TicketId" value="@Model.Id" />
                <input type="hidden" name="UserId" value="@user.Id" />
                <input type="hidden" name="Created" value="@DateTime.Now" />

                <input class="form-control mb-1" type="text" placeholder="Add a comment..." name="Comment" />

                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        }
        
        @foreach (var comment in Model.Comments.OrderByDescending(x => x.Created))
        {
            <p style="font-size: 12px;" class="mb-0">
                <strong>@comment.User.FullName</strong> 
                <span style="color: #606060">@comment.Created.ToString("d") @comment.Created.ToString("t")</span>
            </p>
            <p style="font-size: 14px;">@comment.Comment</p>
        }
    </div>

    <div class="col-sm-4">
        <div class="row">
            <div class="col">
                <div class="row">
                    <div class="col">
                        <label asp-for="TicketStatusId" class="control-label"></label>
                    </div>
                    <div class="col">
                        <form id="TicketStatusForm" asp-controller="TicketStatuses" asp-action="Edit" method="post">
                            <input type="hidden" name="ticketId" value="@Model.Id" />
                            <select name="id" asp-items="ViewBag.StatusList">
                                <option value="@Model.TicketStatusId">@Model.TicketStatus.Name</option>
                            </select>
                        </form>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label asp-for="TicketPriorityId" class="control-label"></label>
                    </div>
                    <div class="col">
                        <form id="TicketPriorityForm" asp-controller="TicketPriorities" asp-action="Edit" method="post">
                            <input type="hidden" name="ticketId" value="@Model.Id" />
                            <select name="id" asp-items="ViewBag.PriorityList">
                                <option value="@Model.TicketPriorityId">@Model.TicketPriority.Name</option>
                            </select>
                        </form>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label asp-for="TicketTypeId" class="control-label"></label>
                    </div>
                    <div class="col">
                        <form id="TicketTypeForm" asp-controller="TicketTypes" asp-action="Edit" method="post">
                            <input type="hidden" name="ticketId" value="@Model.Id" />
                            <select name="id" asp-items="ViewBag.TypeList">
                                <option value="@Model.TicketTypeId">@Model.TicketType.Name</option>
                            </select>
                        </form>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <label asp-for="DeveloperUserId" class="control-label"></label>
                    </div>
                    <div class="col">
                        <form id="TicketAssigneeForm" asp-controller="Tickets" asp-action="EditDeveloper" method="post">
                            <input type="hidden" name="ticketId" value="@Model.Id" />
                            <select name="id" asp-items="ViewBag.AssigneeList">
                                <option value="@Model.DeveloperUserId">@Model.DeveloperUser.FullName</option>
                            </select>
                        </form>
                    </div>
                </div>
                <div class="mb-2">
                    Reporter: @Model.OwnerUser.FullName
                </div>
                <div class="mb-2">
                    Created: @Model.Created.ToString("d") @Model.Created.ToString("t")
                </div>
                @if(Model.Updated is not null) 
                {
                    <span>Updated:</span> <span>@Model.Updated?.ToString("d")</span> <span>@Model.Updated?.ToString("t")</span>
                }
                <br>
            </div>
        </div>
        <div class="row">            
            <div class="col">
                <br>
                <h4>History</h4>
                @foreach (var history in Model.History.OrderByDescending(x => x.Created))
                {
                    if(history.Property is null)
                    {
                        <span>
                            <strong>@history.User.FullName</strong>
                        </span> 
                        <span>created the ticket</span>
                        <span>@history.Created.ToString("d") @history.Created.ToString("t")</span>
                        <br>
                    }
                    else
                    {
                        <span>
                            <strong>@history.User.FullName</strong>
                        </span> 
                        <span>updated the</span>
                        <span>@history.Property</span>
                        <span>@history.Created.ToString("d") @history.Created.ToString("t")</span>
                        <br>
                    }
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">  
    const statusForm = document.getElementById("TicketStatusForm")
    statusForm.addEventListener("change", () => statusForm.submit())
    const priorityForm = document.getElementById("TicketPriorityForm")
    priorityForm.addEventListener("change", () => priorityForm.submit())
    const typeForm = document.getElementById("TicketTypeForm")
    typeForm.addEventListener("change", () => typeForm.submit())
    const assigneeForm = document.getElementById("TicketAssigneeForm")
    assigneeForm.addEventListener("change", () => assigneeForm.submit())
</script>  