@model IEnumerable<TheBugTracker.Models.Ticket>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<BTUser> _signInManager

@{
    ViewData["Title"] = "Index";
}

<style>
    tr {
        cursor: pointer;
    }
    thead{
        cursor: auto;
    }
</style>

<h1>Tickets (@Model.Count())</h1>
<select id="actions">
    <option style="display: none;">Actions</option>
    <option value="/TicketPriorities">Edit Priorities</option>
    <option value="/TicketStatuses">Edit Statuses</option>
    <option value="/TicketTypes">Edit Types</option>
    @if(!_signInManager.IsSignedIn(User))
    {
    <option value="/Home/SeedTickets">Seed More Tickets</option>
    <option value="/Home/SeedTicketHistories">Seed Ticket Histories</option>
    <option value="/Home/UnseedTicketHistories">Unseed Ticket Histories</option>    
    <option value="/Home/UnseedTickets">Unseed All Tickets</option>
    }
</select>
@if(!_signInManager.IsSignedIn(User))
{
    <p><em>Seed data from <a href="https://catalog.data.gov/dataset" target="_blank">data.gov</a></em></p>
}
@if(_signInManager.IsSignedIn(User))
{
    <p><a asp-action="Create" class="btn btn-primary mt-3">Create New</a></p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            @* <th>
                @Html.DisplayNameFor(model => model.Description)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Updated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Project)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketPriority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OwnerUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeveloperUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.OrderByDescending(x => x.Created)) {
        <tr id="@item.Id">
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Archived)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketPriority.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketStatus.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OwnerUser.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeveloperUser.FullName)
            </td>
        </tr>
}
    </tbody>
</table>

<script>
    const actions = document.getElementById("actions")
    actions.addEventListener('change', (e) => {
        window.location = e.target.value
    })
</script>


<script>
    $(document).ready(() => {
        let collection = document.getElementsByTagName("tr")
        let rows = Array.from(collection);
        rows.shift()

        rows.forEach(row => {
            row.addEventListener('click', e => {
                window.location = `/Tickets/Details/${row.id}`
            })
        })
    })
</script>