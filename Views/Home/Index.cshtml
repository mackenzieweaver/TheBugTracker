@model IEnumerable<Ticket>

<div class="row">
    <div class="col">
        <h1>Dashboard</h1>
        <hr>
    </div>
</div>

<div class="row">
    <div class="col">
        <a asp-controller="Tickets" asp-action="Create" class="btn btn-primary">Create new ticket</a>
    </div>
</div>

@if(Model.Count() > 0)
{
    <div class="row">
        <div class="col m-3 p-3 border rounded">
            <h4>Tickets by Type</h4>
            <canvas id="ticketTypesDoughnutChart"></canvas>
        </div>
        <div class="col m-3 p-3 border rounded">
            <h4>Tickets by Status</h4>
            <canvas id="ticketStatusesDoughnutChart"></canvas>
        </div>
        <div class="col m-3 p-3 border rounded">
            <h4>Tickets by Priority</h4>
            <canvas id="ticketPrioritiesDoughnutChart"></canvas>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        fetch("/Chart/TicketTypes").then(r => r.json()).then(d => {
            const labels = Object.keys(d)
            let colors = []
            labels.forEach((x, i) => colors.push(`rgba(255, 0, 0, ${(i + 1) / 10})`))
            const data = {
                labels: labels,
                datasets: [{
                    data: Object.values(d),
                    backgroundColor: colors
                }]
            };
            const config = {
                type: 'doughnut',
                data: data,
                options: {}
            };
            const myChart = new Chart(
                document.getElementById('ticketTypesDoughnutChart'),
                config
            );
        })

        fetch("/Chart/TicketStatuses").then(r => r.json()).then(d => {
            const labels = Object.keys(d)
            let colors = []
            labels.forEach((x, i) => colors.push(`rgba(0, 255, 0, ${(i + 1) / 10})`))
            const data = {
                labels: labels,
                datasets: [{
                    data: Object.values(d),
                    backgroundColor: colors
                }]
            };
            const config = {
                type: 'doughnut',
                data: data,
                options: {}
            };
            const myChart = new Chart(
                document.getElementById('ticketStatusesDoughnutChart'),
                config
            );
        })

        fetch("/Chart/TicketPriorities").then(r => r.json()).then(d => {
            const labels = Object.keys(d)
            let colors = []
            labels.forEach((x, i) => colors.push(`rgba(0, 0, 255, ${(i + 1) / 10})`))
            const data = {
                labels: labels,
                datasets: [{
                    data: Object.values(d),
                    backgroundColor: colors
                }]
            };
            const config = {
                type: 'doughnut',
                data: data,
                options: {}
            };
            const myChart = new Chart(
                document.getElementById('ticketPrioritiesDoughnutChart'),
                config
            );
        })
    </script>
}